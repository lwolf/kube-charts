apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
data:
  config.toml: |
    concurrent = {{ default "4" .Values.concurrent }}
    check_interval = {{ default "1" .Values.concurrent }}
    {{ if .Values.sentryDSN -}}
    sentry_dsn = "{{ .Values.sentryDSN }}"
    {{ end -}}
    {{ if .Values.metricsServer -}}
    metrics_server = "0.0.0.0:9252"
    {{ end -}}

    [[runners]]
      name = "{{ template "fullname" . }}"
      url = {{ .Values.gitlabUrl | quote }}
      token = {{ .Values.token | quote }}
      {{- if .Values.executor.kubernetes.enabled }}
      executor = "kubernetes"
      [runners.kubernetes]
        namespace = {{ required "Kubernetes namespace is required" .Values.executor.kubernetes.namespace | quote }}
        {{- if .Values.executor.kubernetes.host }}
        host = {{ .Values.executor.kubernetes.host | quote }}
        {{- end }}
        {{- if .Values.executor.kubernetes.certFile }}
        cert_file = {{ .Values.executor.kubernetes.certFile | quote }}
        {{- end }}
        {{- if .Values.executor.kubernetes.keyFile }}
        key_file = {{ .Values.executor.kubernetes.keyFile | quote }}
        {{- end }}
        {{- if .Values.executor.kubernetes.caFile }}
        ca_file = {{ .Values.executor.kubernetes.caFile | quote }}
        {{- end }}
        {{- if .Values.executor.kubernetes.image }}
        image = {{ .Values.executor.kubernetes.image | quote }}
        {{- end }}
        {{- if .Values.executor.kubernetes.privileged }}
        privileged = {{ .Values.executor.kubernetes.privileged }}
        {{- end }}
        {{- if .Values.executor.kubernetes.imagePullSecrets }}
        image_pull_secrets = [{{ template "pullSecretsList" . }}]
        {{- end }}
        {{- if .Values.executor.kubernetes.nodeSelector }}
        [runners.kubernetes.node_selector]
          {{- template "nodeSelector" . }}
        {{- end }}
      {{- else if .Values.executor.docker.enabled }}
      executor = "docker"
      [runners.docker]
        tls_verify = {{ .Values.executor.docker.tlsVerify }}
        image = {{ .Values.executor.docker.image | quote }}
        privileged = {{ .Values.executor.docker.privileged }}
        volumes = [{{ template "volumesList" . }}]
      {{- else }}
      {{ fail "One selector type must be enabled" }}
      {{- end }}
      {{ if .Values.cache.enabled -}}
      [runners.cache]
        Type = {{ .Values.cache.type | quote }}
        ServerAddress = {{ required "Cache server address is required." .Values.cache.serverAddress | quote }}
        Insecure = {{ default "false" .Values.cache.insecure }}
        AccessKey = {{ required "Cache access key is required." .Values.cache.accessKey | quote }}
        SecretKey = {{ required "Cache secret key is required." .Values.cache.secretKey | quote }}
        BucketName = {{ default "runner" .Values.cache.bucketName | quote }}
      {{- end }}
